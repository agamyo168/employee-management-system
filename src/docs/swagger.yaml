openapi: 3.0.0
info:
  title: Employee Management System
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:5000/api/v1
    variables: {}
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign up
      operationId: Signup
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SignupRequest'
                - example:
                    username: testuser
                    password: '123456789'
            example:
              username: testuser
              password: '123456789'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginRequest'
                - example:
                    username: testuser
                    password: '123456789'
            example:
              username: testuser
              password: '123456789'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /employees:
    post:
      tags:
        - Employees
      summary: Create Employee
      operationId: CreateEmployee
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateEmployeeRequest'
                - example:
                    firstName: water
                    lastName: fox
                    departmentId: 1
                    email: waterfox@tests23.com
                    salary: 15000
            example:
              firstName: water
              lastName: fox
              departmentId: 1
              email: waterfox@tests23.com
              salary: 15000
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Employees
      summary: Get Employees
      operationId: GetEmployees
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /employees/1:
    get:
      tags:
        - Employees
      summary: Get Employee by id
      operationId: GetEmployeebyid
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Employees
      summary: Edit employee by id
      operationId: Editemployeebyid
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EditemployeebyidRequest'
                - example:
                    firstName: ice
            example:
              firstName: ice
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /employees/2:
    delete:
      tags:
        - Employees
      summary: Delete employee by id
      operationId: Deleteemployeebyid
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /departments:
    get:
      tags:
        - Departments
      summary: Get All Departments
      operationId: GetAllDepartments
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Departments
      summary: Add Department
      operationId: AddDepartment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddDepartmentRequest'
                - example:
                    deptName: HR Department
            example:
              deptName: HR Department
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /departments/1:
    get:
      tags:
        - Departments
      summary: Get department by id
      operationId: Getdepartmentbyid
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
        - Departments
      summary: Update Department
      operationId: UpdateDepartment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateDepartmentRequest'
                - example:
                    deptName: ER Department
            example:
              deptName: ER Department
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    SignupRequest:
      title: SignupRequest
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: testusder
        password: '123456789'
    LoginRequest:
      title: LoginRequest
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: testuser
        password: '123456789'
    CreateEmployeeRequest:
      title: CreateEmployeeRequest
      required:
        - firstName
        - lastName
        - departmentId
        - email
        - salary
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        departmentId:
          type: integer
          format: int32
        email:
          type: string
        salary:
          type: integer
          format: int32
      example:
        firstName: water
        lastName: fox
        departmentId: 1
        email: waterfox@tests23.com
        salary: 15000
    EditemployeebyidRequest:
      title: EditemployeebyidRequest
      required:
        - firstName
      type: object
      properties:
        firstName:
          type: string
      example:
        firstName: ice
    AddDepartmentRequest:
      title: AddDepartmentRequest
      required:
        - deptName
      type: object
      properties:
        deptName:
          type: string
      example:
        deptName: HR Department
    UpdateDepartmentRequest:
      title: UpdateDepartmentRequest
      required:
        - deptName
      type: object
      properties:
        deptName:
          type: string
      example:
        deptName: ER Department
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Authentication
  - name: Employees
  - name: Departments
